library(ggplot2)
library(RColorBrewer)
library(reshape2)
library(gplots)
library(gtools)
library(stats)
library(lattice)
library(latticeExtra)
library(grid)
library(gridExtra)
library(wesanderson)
library(Rtsne)
library(tidyverse)
library(pheatmap)
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_T1D/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_T1D/.*", "single_cell_T1D/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("dataLoadT1D.R",
"cleanCt.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"plotTSNE.R",
"geneExpressHistogram.R",
"compareTopGenes.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## load data
ctTable <- dataLoadT1D()
## calculate log2Ex, reformat ctTable, and normalize values
ctNorm <- cleanCt(ctTable, summaryOutput=T, cumExpCutoff = F, normGene = "none")
View(ctNorm)
names(ctNorm)
ctNorm$CD274
typeof(ctNorm$CD274)
for (i in ctNorm$CD274){
print(i)
}
for (i in ctNorm$CD274){
print(is.na(i))
}
ctNorm[1,CD274]
ctNorm$CD274[1]
index = 1
for (value in ctNorm$CD274){
if (is.na(value)){
ctNorm$CD274[index] <- ctNorm$`PDL-1`[index]
}
}
ctNorm$CD274
index = 1
for (value in ctNorm$CD274){
if (is.na(value)){
ctNorm$CD274[index] <- ctNorm$`PDL-1`[index]
}
index += 1
index = 1
for (value in ctNorm$CD274){
if (is.na(value)){
ctNorm$CD274[index] <- ctNorm$`PDL-1`[index]
}
index = index + 1
}
ctNorm$CD274
index = 1
for (value in ctNorm$CD274){
if (is.na(value)){
ctNorm$CD274[index] <- ctNorm$`PDL-1`[index]
}
index = index + 1
}
ctNorm <- subset(ctNorm, select = -c("PDL-1"))
index = 1
for (value in ctNorm$CD274){
if (is.na(value)){
ctNorm$CD274[index] <- ctNorm$`PDL-1`[index]
}
index = index + 1
}
ctNorm <- subset(ctNorm, select = -c(`PDL-1`))
knitr::opts_knit$set(global.par = TRUE)
library(plyr)
library(ggplot2)
library(RColorBrewer)
library(reshape2)
library(gplots)
library(gtools)
library(stats)
library(lattice)
library(latticeExtra)
library(grid)
library(gridExtra)
library(wesanderson)
library(Rtsne)
library(tidyverse)
library(pheatmap)
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_T1D/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_T1D/.*", "single_cell_T1D/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("dataLoadT1D.R",
"cleanCt.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"plotTSNE.R",
"geneExpressHistogram.R",
"compareTopGenes.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## load data
ctTable <- dataLoadT1D()
## calculate log2Ex, reformat ctTable, and normalize values
ctNorm <- cleanCt(ctTable, summaryOutput=T, cumExpCutoff = F, normGene = "none")
## Select all cell with Tetramer Markers
ctSelect <- ctNorm
all_Tetramer <- ctSelect[ctSelect$age == "12-20", ]
for (i in c("13-21", "CP11", "CP13", "CP18")){
all_Tetramer <- rbind(all_Tetramer, ctSelect[ctSelect$age == i, ])
}
## Plot number of gene expressed distribution for all selected cells and get top 20 expressed genes
top_20Tetramer <- geneExpressHistogram(all_Tetramer, num_top = 20)
View(ctNorm)
## load data
ctTable <- dataLoadT1D()
## calculate log2Ex, reformat ctTable, and normalize values
ctNorm <- cleanCt(ctTable, summaryOutput=T, cumExpCutoff = F, normGene = "none")
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_T1D/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_T1D/.*", "single_cell_T1D/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("dataLoadT1D.R",
"cleanCt.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"plotTSNE.R",
"geneExpressHistogram.R",
"compareTopGenes.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## load data
ctTable <- dataLoadT1D()
## calculate log2Ex, reformat ctTable, and normalize values
ctNorm <- cleanCt(ctTable, summaryOutput=T, cumExpCutoff = F, normGene = "none")
## Select all cell with Tetramer Markers
ctSelect <- ctNorm
all_Tetramer <- ctSelect[ctSelect$age == "12-20", ]
for (i in c("13-21", "CP11", "CP13", "CP18")){
all_Tetramer <- rbind(all_Tetramer, ctSelect[ctSelect$age == i, ])
}
## Plot number of gene expressed distribution for all selected cells and get top 20 expressed genes
top_20Tetramer <- geneExpressHistogram(all_Tetramer, num_top = 20)
View(ctNorm)
#ctNorm[is.na(ctNorm)] <- 0
ctNorm[is.na(ctNorm)] <- 0
## Select all cell with Tetramer Markers
ctSelect <- ctNorm
all_Tetramer <- ctSelect[ctSelect$age == "12-20", ]
for (i in c("13-21", "CP11", "CP13", "CP18")){
all_Tetramer <- rbind(all_Tetramer, ctSelect[ctSelect$age == i, ])
}
## Plot number of gene expressed distribution for all selected cells and get top 20 expressed genes
top_20Tetramer <- geneExpressHistogram(all_Tetramer, num_top = 20)
## Plot the heatmap for top_20 tetramer genes on all_tetramer cells
topT_T_df <- all_Tetramer[top_20Tetramer]
pheatmap(t(topT_T_df), fontsize = 28)
ctNorm[is.na(ctNorm)]
## load data
ctTable <- dataLoadT1D()
## calculate log2Ex, reformat ctTable, and normalize values
ctNorm <- cleanCt(ctTable, summaryOutput=T, cumExpCutoff = F, normGene = "none")
ctNorm[is.na(ctNorm)]
is.na(ctNorm)
## load data
ctTable <- dataLoadT1D()
## calculate log2Ex, reformat ctTable, and normalize values
ctNorm <- cleanCt(ctTable, summaryOutput=T, cumExpCutoff = F, normGene = "none")
## Select all cell with Tetramer Markers
ctSelect <- ctNorm
all_Tetramer <- ctSelect[ctSelect$age == "12-20", ]
for (i in c("13-21", "CP11", "CP13", "CP18")){
all_Tetramer <- rbind(all_Tetramer, ctSelect[ctSelect$age == i, ])
}
## Plot number of gene expressed distribution for all selected cells and get top 20 expressed genes
top_20Tetramer <- geneExpressHistogram(all_Tetramer, num_top = 20)
#ctNorm[is.na(ctNorm)] <- 0
for (i in 1:nrow(ctNorm)){
for (j in 1:ncol(ctNorm)){
if (is..na(ctNorm[i,j])){
print(i)
print(j)
}
}
}
#ctNorm[is.na(ctNorm)] <- 0
for (i in 1:nrow(ctNorm)){
for (j in 1:ncol(ctNorm)){
if (is.na(ctNorm[i,j])){
print(i)
print(j)
}
}
}
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_T1D/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_T1D/.*", "single_cell_T1D/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("dataLoadT1D.R",
"cleanCt.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"plotTSNE.R",
"geneExpressHistogram.R",
"compareTopGenes.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## load data
ctTable <- dataLoadT1D()
## calculate log2Ex, reformat ctTable, and normalize values
ctNorm <- cleanCt(ctTable, summaryOutput=T, cumExpCutoff = F, normGene = "none")
#ctNorm[is.na(ctNorm)] <- 0
for (i in 1:nrow(ctNorm)){
for (j in 1:ncol(ctNorm)){
if (is.na(ctNorm[i,j])){
print(i)
print(j)
}
}
}
#ctNorm[is.na(ctNorm)] <- 0
for (i in 1:nrow(ctNorm)){
for (j in 8:ncol(ctNorm)){
if (is.na(ctNorm[i,j])){
print(i)
print(j)
}
}
}
## Select all cell with Tetramer Markers
ctSelect <- ctNorm
all_Tetramer <- ctSelect[ctSelect$age == "12-20", ]
for (i in c("13-21", "CP11", "CP13", "CP18")){
all_Tetramer <- rbind(all_Tetramer, ctSelect[ctSelect$age == i, ])
}
## Plot number of gene expressed distribution for all selected cells and get top 20 expressed genes
top_20Tetramer <- geneExpressHistogram(all_Tetramer, num_top = 20)
ctNorm[is.na(ctNorm)] <- 0
## Select all cell with Tetramer Markers
ctSelect <- ctNorm
all_Tetramer <- ctSelect[ctSelect$age == "12-20", ]
for (i in c("13-21", "CP11", "CP13", "CP18")){
all_Tetramer <- rbind(all_Tetramer, ctSelect[ctSelect$age == i, ])
}
## Plot number of gene expressed distribution for all selected cells and get top 20 expressed genes
top_20Tetramer <- geneExpressHistogram(all_Tetramer, num_top = 20)
## Plot the heatmap for top_20 tetramer genes on all_tetramer cells
topT_T_df <- all_Tetramer[top_20Tetramer]
pheatmap(t(topT_T_df), fontsize = 28)
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_T1D/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_T1D/.*", "single_cell_T1D/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("dataLoadT1D.R",
"cleanCt.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"plotTSNE.R",
"geneExpressHistogram.R",
"compareTopGenes.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## load data
ctTable <- dataLoadT1D()
## calculate log2Ex, reformat ctTable, and normalize values
ctNorm <- cleanCt(ctTable, summaryOutput=T, cumExpCutoff = F, normGene = "none")
#ctNorm[is.na(ctNorm)] <- 0
is.na(ctNorm)
## Select all cell with Tetramer Markers
ctSelect <- ctNorm
all_Tetramer <- ctSelect[ctSelect$age == "12-20", ]
for (i in c("13-21", "CP11", "CP13", "CP18", "Alt1-9")){
all_Tetramer <- rbind(all_Tetramer, ctSelect[ctSelect$age == i, ])
}
## Plot number of gene expressed distribution for all selected cells and get top 20 expressed genes
top_20Tetramer <- geneExpressHistogram(all_Tetramer, num_top = 20)
#ctNorm[is.na(ctNorm)] <- 0
for (i in 1:nrow(ctNorm)){
for (j in 1:ncol(ctNorm)){
if (is.na(ctNorm[i,j])){
print(i)
print(j)
}
}
}
View(ctNorm)
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_T1D/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_T1D/.*", "single_cell_T1D/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("dataLoadT1D.R",
"cleanCt.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"plotTSNE.R",
"geneExpressHistogram.R",
"compareTopGenes.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## load data
ctTable <- dataLoadT1D()
## calculate log2Ex, reformat ctTable, and normalize values
ctNorm <- cleanCt(ctTable, summaryOutput=T, cumExpCutoff = F, normGene = "none")
#ctNorm[is.na(ctNorm)] <- 0
for (i in 1:nrow(ctNorm)){
for (j in 1:ncol(ctNorm)){
if (is.na(ctNorm[i,j])){
print(i)
print(j)
}
}
}
## Select all cell with Tetramer Markers
ctSelect <- ctNorm
all_Tetramer <- ctSelect[ctSelect$age == "12-20", ]
for (i in c("13-21", "CP11", "CP13", "CP18", "Alt1-9")){
all_Tetramer <- rbind(all_Tetramer, ctSelect[ctSelect$age == i, ])
}
## Plot number of gene expressed distribution for all selected cells and get top 20 expressed genes
top_20Tetramer <- geneExpressHistogram(all_Tetramer, num_top = 20)
## Plot the heatmap for top_20 tetramer genes on all_tetramer cells
topT_T_df <- all_Tetramer[top_20Tetramer]
pheatmap(t(topT_T_df), fontsize = 28)
ctSelect <- all_Tetramer
low_Cut <- 7
high_cut <- 27
ctSelect$explevel <- NA
## loop through the data set to get num_express
for (i in 1:nrow(ctSelect)){
num_express = 0
for (j in 8:(ncol(ctSelect)-1)){
if (ctSelect[i,j] != 0){
num_express = num_express+1
}
}
ctSelect[i, "explevel"] = num_express
}
low_expression <- subset(ctSelect, explevel < high_cut & explevel >= low_Cut)
high_expression <- subset(ctSelect, explevel >= high_cut)
View(high_expression)
## Find the most active genes
active_genes <- data.frame()
for (j in 8:(ncol(low_expression)-1)){
num_active = 0
for (i in 1:nrow(low_expression)){
if (ctSelect[i,j] != 0){
num_active  = num_active+1
}
}
new_gene <- data.frame(c(num_active))
rownames(new_gene) <- c(colnames(low_expression)[j])
active_genes <- rbind(active_genes, new_gene)
}
colnames(active_genes) <- "num_active"
View(active_genes)
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_T1D/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_T1D/.*", "single_cell_T1D/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("dataLoadT1D.R",
"cleanCt.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"plotTSNE.R",
"geneExpressHistogram.R",
"compareTopGenes.R",
"SpecificHeatMap.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## Select all cell with Tetramer Markers
ctSelect <- ctNorm
all_Tetramer <- ctSelect[ctSelect$age == "12-20", ]
for (i in c("13-21", "CP11", "CP13", "CP18", "Alt1-9")){
all_Tetramer <- rbind(all_Tetramer, ctSelect[ctSelect$age == i, ])
}
## Plot number of gene expressed distribution for all selected cells and get top 20 expressed genes
top_20Tetramer <- geneExpressHistogram(all_Tetramer, num_top = 20)
## Plot the heatmap for top_20 tetramer genes on all_tetramer cells
topT_T_df <- all_Tetramer[top_20Tetramer]
pheatmap(t(topT_T_df), fontsize = 28)
## Specific Analysis for low expression and high expression cells
SpecificHeatMap(all_Tetramer, low_Cut = 7, high_cut = 27)
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_T1D/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_T1D/.*", "single_cell_T1D/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("dataLoadT1D.R",
"cleanCt.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"plotTSNE.R",
"geneExpressHistogram.R",
"compareTopGenes.R",
"SpecificHeatMap.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## Specific Analysis for low expression and high expression cells
SpecificHeatMap(all_Tetramer, low_Cut = 7, high_cut = 27, num_top = 20)
## Get seperation of cells based on expression level
(low_expression, high_expression) = SpecificHeatMap(all_Tetramer)
## Get seperation of cells based on expression level
low_expression, high_expression = SpecificHeatMap(all_Tetramer)
## Select all PD1+/ICOS+ cells
ctSelect <- ctNorm
all_PD1ICOS <- ctSelect[ctSelect$age == "PD1+/ICOS+", ]
## Plot number of gene expressed distribution for all selected cells and get top 20 expressed genes
top_20PD1ICOS <- geneExpressHistogram(all_PD1ICOS, num_top = 20)
## Plot the heatmap for top_20 PD1ICOS genes on all_PD1ICOS cells
topPI_PI_df <- all_PD1ICOS[top_20PD1ICOS]
pheatmap(t(topPI_PI_df), fontsize = 28)
View(all_PD1ICOS)
all_PD1ICOS <- ctSelect[ctSelect$cellSource == "Child", ]
all_PD1ICOS <- rbind(all_PD1ICOS, ctSelect[ctSelect$cellSource == "Risk", ])
## Select all PD1+/ICOS+ cells
ctSelect <- ctNorm
all_PD1ICOS <- ctSelect[ctSelect$age == "PD1+/ICOS+", ]
## Plot number of gene expressed distribution for all selected cells and get top 20 expressed genes
top_20PD1ICOS <- geneExpressHistogram(all_PD1ICOS, num_top = 20)
## Plot the heatmap for top_20 PD1ICOS genes on all_PD1ICOS cells
topPI_PI_df <- all_PD1ICOS[top_20PD1ICOS]
pheatmap(t(topPI_PI_df), fontsize = 28)
all_PD1ICOS <- ctSelect[all_PD1ICOS$cellSource == "Child", ]
all_PD1ICOS <- rbind(all_PD1ICOS, ctSelect[ctSelect$cellSource == "Risk", ])
ctSelect <- ctNorm
all_PD1ICOS <- ctSelect[ctSelect$age == "PD1+/ICOS+", ]
#all_PD1ICOS <- ctSelect[all_PD1ICOS$cellSource == "Child", ]
#all_PD1ICOS <- rbind(all_PD1ICOS, ctSelect[ctSelect$cellSource == "Risk", ])
ctSelect <- ctNorm
all_PD1ICOS <- ctSelect[ctSelect$age == "PD1+/ICOS+", ]
all_PD1ICOS_select <- ctSelect[all_PD1ICOS$cellSource == "Child", ]
all_PD1ICOS_select <- rbind(all_PD1ICOS_select, all_PD1ICOS[all_PD1ICOS$cellSource == "Risk", ])
View(all_PD1ICOS_select)
ctSelect <- ctNorm
all_PD1ICOS <- ctSelect[ctSelect$age == "PD1+/ICOS+", ]
all_PD1ICOS_select <- ctSelect[all_PD1ICOS$cellSource == "Child", ]
#all_PD1ICOS_select <- rbind(all_PD1ICOS_select, all_PD1ICOS[all_PD1ICOS$cellSource == "Risk", ])
ctSelect <- ctNorm
all_PD1ICOS <- ctSelect[ctSelect$age == "PD1+/ICOS+", ]
all_PD1ICOS_select <- all_PD1ICOS[all_PD1ICOS$cellSource == "Child", ]
all_PD1ICOS_select <- rbind(all_PD1ICOS_select, all_PD1ICOS[all_PD1ICOS$cellSource == "Risk", ])
