"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"reportViolins.R",
"reportTSNE.R",
"plotTSNE.R",
"geneExpressHistogram.R",
"compareTopGenes.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## Select PD1+/ICOS+ cells from RAD and TNET
ctSelect <- ctNorm
ctSelect_RAD <- ctSelect[grepl("RAD", ctSelect$probe, fixed=TRUE), ]
ctSelect_TNET <- ctSelect[grepl("TNET", ctSelect$probe, fixed=TRUE), ]
ctSelect = rbind(ctSelect_RAD, ctSelect_TNET)
all_PD1ICOS <- ctSelect[ctSelect$age == "PD1+/ICOS+", ]
## Cross compare the top expressed genes
ctCompare <- compareTopGenes(all_PD1ICOS, top_20)
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_T1D/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_T1D/.*", "single_cell_T1D/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("formatRaw.R",
"dataLoadT1D.R",
"cleanCt.R",
"geneSetEnrichment.R",
"violinPlot.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"reportViolins.R",
"reportTSNE.R",
"plotTSNE.R",
"geneExpressHistogram.R",
"compareTopGenes.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## Select PD1+/ICOS+ cells from RAD and TNET
ctSelect <- ctNorm
ctSelect_RAD <- ctSelect[grepl("RAD", ctSelect$probe, fixed=TRUE), ]
ctSelect_TNET <- ctSelect[grepl("TNET", ctSelect$probe, fixed=TRUE), ]
ctSelect = rbind(ctSelect_RAD, ctSelect_TNET)
all_PD1ICOS <- ctSelect[ctSelect$age == "PD1+/ICOS+", ]
## Cross compare the top expressed genes
ctCompare <- compareTopGenes(all_PD1ICOS, top_20)
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_T1D/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_T1D/.*", "single_cell_T1D/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("formatRaw.R",
"dataLoadT1D.R",
"cleanCt.R",
"geneSetEnrichment.R",
"violinPlot.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"reportViolins.R",
"reportTSNE.R",
"plotTSNE.R",
"geneExpressHistogram.R",
"compareTopGenes.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## Select PD1+/ICOS+ cells from RAD and TNET
ctSelect <- ctNorm
ctSelect_RAD <- ctSelect[grepl("RAD", ctSelect$probe, fixed=TRUE), ]
ctSelect_TNET <- ctSelect[grepl("TNET", ctSelect$probe, fixed=TRUE), ]
ctSelect = rbind(ctSelect_RAD, ctSelect_TNET)
all_PD1ICOS <- ctSelect[ctSelect$age == "PD1+/ICOS+", ]
## Cross compare the top expressed genes
ctCompare <- compareTopGenes(all_PD1ICOS, top_20)
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_T1D/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_T1D/.*", "single_cell_T1D/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("formatRaw.R",
"dataLoadT1D.R",
"cleanCt.R",
"geneSetEnrichment.R",
"violinPlot.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"reportViolins.R",
"reportTSNE.R",
"plotTSNE.R",
"geneExpressHistogram.R",
"compareTopGenes.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## Select PD1+/ICOS+ cells from RAD and TNET
ctSelect <- ctNorm
ctSelect_RAD <- ctSelect[grepl("RAD", ctSelect$probe, fixed=TRUE), ]
ctSelect_TNET <- ctSelect[grepl("TNET", ctSelect$probe, fixed=TRUE), ]
ctSelect = rbind(ctSelect_RAD, ctSelect_TNET)
all_PD1ICOS <- ctSelect[ctSelect$age == "PD1+/ICOS+", ]
## Cross compare the top expressed genes
ctCompare <- compareTopGenes(all_PD1ICOS, top_20)
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_T1D/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_T1D/.*", "single_cell_T1D/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("formatRaw.R",
"dataLoadT1D.R",
"cleanCt.R",
"geneSetEnrichment.R",
"violinPlot.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"reportViolins.R",
"reportTSNE.R",
"plotTSNE.R",
"geneExpressHistogram.R",
"compareTopGenes.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## Select PD1+/ICOS+ cells from RAD and TNET
ctSelect <- ctNorm
ctSelect_RAD <- ctSelect[grepl("RAD", ctSelect$probe, fixed=TRUE), ]
ctSelect_TNET <- ctSelect[grepl("TNET", ctSelect$probe, fixed=TRUE), ]
ctSelect = rbind(ctSelect_RAD, ctSelect_TNET)
all_PD1ICOS <- ctSelect[ctSelect$age == "PD1+/ICOS+", ]
## Cross compare the top expressed genes
ctCompare <- compareTopGenes(all_PD1ICOS, top_20)
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_T1D/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_T1D/.*", "single_cell_T1D/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("formatRaw.R",
"dataLoadT1D.R",
"cleanCt.R",
"geneSetEnrichment.R",
"violinPlot.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"reportViolins.R",
"reportTSNE.R",
"plotTSNE.R",
"geneExpressHistogram.R",
"compareTopGenes.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## Select PD1+/ICOS+ cells from RAD and TNET
ctSelect <- ctNorm
ctSelect_RAD <- ctSelect[grepl("RAD", ctSelect$probe, fixed=TRUE), ]
ctSelect_TNET <- ctSelect[grepl("TNET", ctSelect$probe, fixed=TRUE), ]
ctSelect = rbind(ctSelect_RAD, ctSelect_TNET)
all_PD1ICOS <- ctSelect[ctSelect$age == "PD1+/ICOS+", ]
## Cross compare the top expressed genes
ctCompare <- compareTopGenes(all_PD1ICOS, top_20)
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_T1D/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_T1D/.*", "single_cell_T1D/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("formatRaw.R",
"dataLoadT1D.R",
"cleanCt.R",
"geneSetEnrichment.R",
"violinPlot.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"reportViolins.R",
"reportTSNE.R",
"plotTSNE.R",
"geneExpressHistogram.R",
"compareTopGenes.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## Select PD1+/ICOS+ cells from RAD and TNET
ctSelect <- ctNorm
ctSelect_RAD <- ctSelect[grepl("RAD", ctSelect$probe, fixed=TRUE), ]
ctSelect_TNET <- ctSelect[grepl("TNET", ctSelect$probe, fixed=TRUE), ]
ctSelect = rbind(ctSelect_RAD, ctSelect_TNET)
all_PD1ICOS <- ctSelect[ctSelect$age == "PD1+/ICOS+", ]
## Cross compare the top expressed genes
ctCompare <- compareTopGenes(all_PD1ICOS, top_20)
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_T1D/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_T1D/.*", "single_cell_T1D/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("formatRaw.R",
"dataLoadT1D.R",
"cleanCt.R",
"geneSetEnrichment.R",
"violinPlot.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"reportViolins.R",
"reportTSNE.R",
"plotTSNE.R",
"geneExpressHistogram.R",
"compareTopGenes.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## Select PD1+/ICOS+ cells from RAD and TNET
ctSelect <- ctNorm
ctSelect_RAD <- ctSelect[grepl("RAD", ctSelect$probe, fixed=TRUE), ]
ctSelect_TNET <- ctSelect[grepl("TNET", ctSelect$probe, fixed=TRUE), ]
ctSelect = rbind(ctSelect_RAD, ctSelect_TNET)
all_PD1ICOS <- ctSelect[ctSelect$age == "PD1+/ICOS+", ]
## Cross compare the top expressed genes
ctCompare <- compareTopGenes(all_PD1ICOS, top_20)
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_T1D/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_T1D/.*", "single_cell_T1D/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("formatRaw.R",
"dataLoadT1D.R",
"cleanCt.R",
"geneSetEnrichment.R",
"violinPlot.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"reportViolins.R",
"reportTSNE.R",
"plotTSNE.R",
"geneExpressHistogram.R",
"compareTopGenes.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## Select PD1+/ICOS+ cells from RAD and TNET
ctSelect <- ctNorm
ctSelect_RAD <- ctSelect[grepl("RAD", ctSelect$probe, fixed=TRUE), ]
ctSelect_TNET <- ctSelect[grepl("TNET", ctSelect$probe, fixed=TRUE), ]
ctSelect = rbind(ctSelect_RAD, ctSelect_TNET)
all_PD1ICOS <- ctSelect[ctSelect$age == "PD1+/ICOS+", ]
## Cross compare the top expressed genes
ctCompare <- compareTopGenes(all_PD1ICOS, top_20)
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_T1D/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_T1D/.*", "single_cell_T1D/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("formatRaw.R",
"dataLoadT1D.R",
"cleanCt.R",
"geneSetEnrichment.R",
"violinPlot.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"reportViolins.R",
"reportTSNE.R",
"plotTSNE.R",
"geneExpressHistogram.R",
"compareTopGenes.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## Select PD1+/ICOS+ cells from RAD and TNET
ctSelect <- ctNorm
ctSelect_RAD <- ctSelect[grepl("RAD", ctSelect$probe, fixed=TRUE), ]
ctSelect_TNET <- ctSelect[grepl("TNET", ctSelect$probe, fixed=TRUE), ]
ctSelect = rbind(ctSelect_RAD, ctSelect_TNET)
all_PD1ICOS <- ctSelect[ctSelect$age == "PD1+/ICOS+", ]
## Cross compare the top expressed genes
ctCompare <- compareTopGenes(all_PD1ICOS, top_20)
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_T1D/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_T1D/.*", "single_cell_T1D/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("formatRaw.R",
"dataLoadT1D.R",
"cleanCt.R",
"geneSetEnrichment.R",
"violinPlot.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"reportViolins.R",
"reportTSNE.R",
"plotTSNE.R",
"geneExpressHistogram.R",
"compareTopGenes.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## Select all cell with Tetramer Markers
ctSelect <- ctNorm
all_Tetramer <- ctSelect[ctSelect$age == "12-20", ]
for (i in c("13-21", "CP11", "CP13", "CP18")){
all_Tetramer <- rbind(all_Tetramer, ctSelect[ctSelect$age == i, ])
}
## Plot number of gene expressed distribution for all selected cells and get top 20 expressed genes
top_20 <- geneExpressHistogram(all_Tetramer, num_top = 20)
## Select PD1+/ICOS+ cells from RAD and TNET
ctSelect <- ctNorm
ctSelect_RAD <- ctSelect[grepl("RAD", ctSelect$probe, fixed=TRUE), ]
ctSelect_TNET <- ctSelect[grepl("TNET", ctSelect$probe, fixed=TRUE), ]
ctSelect = rbind(ctSelect_RAD, ctSelect_TNET)
all_PD1ICOS <- ctSelect[ctSelect$age == "PD1+/ICOS+", ]
## Cross compare the top expressed genes
ctCompare <- compareTopGenes(all_PD1ICOS, top_20)
library(plyr)
library(ggplot2)
library(RColorBrewer)
library(reshape2)
library(gplots)
library(gtools)
library(stats)
library(lattice)
library(latticeExtra)
library(grid)
library(gridExtra)
library(wesanderson)
library(Rtsne)
library(viridis)
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_T1D/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_T1D/.*", "single_cell_T1D/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("formatRaw.R",
"dataLoadT1D.R",
"cleanCt.R",
"geneSetEnrichment.R",
"violinPlot.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"reportViolins.R",
"reportTSNE.R",
"plotTSNE.R",
"geneExpressHistogram.R",
"compareTopGenes.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## Select PD1+/ICOS+ cells from RAD and TNET
ctSelect <- ctNorm
ctSelect_RAD <- ctSelect[grepl("RAD", ctSelect$probe, fixed=TRUE), ]
ctSelect_TNET <- ctSelect[grepl("TNET", ctSelect$probe, fixed=TRUE), ]
ctSelect = rbind(ctSelect_RAD, ctSelect_TNET)
all_PD1ICOS <- ctSelect[ctSelect$age == "PD1+/ICOS+", ]
## Cross compare the top expressed genes
ctCompare <- compareTopGenes(all_PD1ICOS, top_20)
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_T1D/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_T1D/.*", "single_cell_T1D/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("formatRaw.R",
"dataLoadT1D.R",
"cleanCt.R",
"geneSetEnrichment.R",
"violinPlot.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"reportViolins.R",
"reportTSNE.R",
"plotTSNE.R",
"geneExpressHistogram.R",
"compareTopGenes.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## Select PD1+/ICOS+ cells from RAD and TNET
ctSelect <- ctNorm
ctSelect_RAD <- ctSelect[grepl("RAD", ctSelect$probe, fixed=TRUE), ]
ctSelect_TNET <- ctSelect[grepl("TNET", ctSelect$probe, fixed=TRUE), ]
ctSelect = rbind(ctSelect_RAD, ctSelect_TNET)
all_PD1ICOS <- ctSelect[ctSelect$age == "PD1+/ICOS+", ]
## Cross compare the top expressed genes
ctCompare <- compareTopGenes(all_PD1ICOS, top_20)
ctTable16 <- read.csv(paste(dataDir, "1362427424_RAD005.csv.trimmed", sep=""),
header=TRUE, stringsAsFactors=FALSE)
baseDir <- "~/Desktop/Su Lab/single_cell_T1D/"
dataDir <- paste(baseDir, "data/", sep="")
ctTable16 <- read.csv(paste(dataDir, "1362427424_RAD005.csv.trimmed", sep=""),
header=TRUE, stringsAsFactors=FALSE)
View(ctTable16)
ctTable8 <- read.csv(paste(dataDir, "RAD003(p1220p1321).csv.trimmed", sep=""),
header=TRUE, stringsAsFactors=FALSE)
View(ctTable8)
ctTable19 <- read.csv(paste(dataDir, "1362427336_T-C012.csv.trimmed", sep=""),
header=TRUE, stringsAsFactors=FALSE)
View(ctTable19)
knitr::opts_knit$set(global.par = TRUE)
library(plyr)
library(ggplot2)
library(RColorBrewer)
library(reshape2)
library(gplots)
library(gtools)
library(stats)
library(lattice)
library(latticeExtra)
library(grid)
library(gridExtra)
library(wesanderson)
library(Rtsne)
library(viridis)
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_T1D/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_T1D/.*", "single_cell_T1D/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("dataLoadT1D.R",
"cleanCt.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"plotTSNE.R",
"geneExpressHistogram.R",
"compareTopGenes.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## load data
ctTable <- dataLoadT1D()
## calculate log2Ex, reformat ctTable, and normalize values
ctNorm <- cleanCt(ctTable, summaryOutput=T, cumExpCutoff = F, normGene = "none")
ctNorm[is.na(ctNorm)] <- 0
## Select all cell with Tetramer Markers
ctSelect <- ctNorm
all_Tetramer <- ctSelect[ctSelect$age == "12-20", ]
for (i in c("13-21", "CP11", "CP13", "CP18")){
all_Tetramer <- rbind(all_Tetramer, ctSelect[ctSelect$age == i, ])
}
## Plot number of gene expressed distribution for all selected cells and get top 20 expressed genes
top_20 <- geneExpressHistogram(all_Tetramer, num_top = 20)
